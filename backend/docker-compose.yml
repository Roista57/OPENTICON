services:
  spring:
    build:
      context: ./spring
      dockerfile: Dockerfile
    ports:
      - "7000:8080"
    environment:
      SPRING_PROFILES_ACTIVE: ${ENV_SPRING_PROFILES_ACTIVE}
      DEV_NAME : ${ENV_DEV_NAME}
      DEV_PASSWORD : ${ENV_DEV_PASSWORD}
      KAKAO_OAUTH_CLIENT_ID : ${ENV_KAKAO_OAUTH_CLIENT_ID}
      KAKAO_OAUTH_CLIENT_SECRET : ${ENV_KAKAO_OAUTH_CLIENT_SECRET}
      NAVER_OAUTH_CLIENT_ID : ${ENV_NAVER_OAUTH_CLIENT_ID}
      NAVER_OAUTH_CLIENT_SECRET : ${ENV_NAVER_OAUTH_CLIENT_SECRET}
      GOOGLE_OAUTH_CLIENT_ID : ${ENV_GOOGLE_OAUTH_CLIENT_ID}
      GOOGLE_OAUTH_CLIENT_SECRET : ${ENV_GOOGLE_OAUTH_CLIENT_SECRET}
      JWT_SECRET_KEY : ${ENV_JWT_SECRET_KEY}
      IAMPORT_API_KEY : ${ENV_IAMPORT_API_KEY}
      IAMPORT_API_SECRET : ${ENV_IAMPORT_API_SECRET}
      TZ: Asia/Seoul
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - openticon-network

  postgres:
    image: postgres
    environment:
      - POSTGRES_DB=openticon
      - POSTGRES_USER=${ENV_DEV_NAME}
      - POSTGRES_PASSWORD=${ENV_DEV_PASSWORD}
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ssafy -d openticon"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - openticon-network

networks:
  openticon-network:
    driver: bridge
